version: '3'

services:
  nginx:
    image: nginx
    ports:
      - "3000:3005"
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - webnetwork

  login:
    image: node
    container_name: login
    volumes:
      - ./login:/app/login
      - ./logs:/app/logs
    networks:
      - webnetwork
    command: sh -c "cd /app/login && npm install --registry=https://registry.npmmirror.com && node app.js"

  server1:
    image: node
    container_name: server1
    volumes:
      - ./server:/app/server
      - ./logs:/app/logs
    networks:
      - webnetwork
    command: sh -c "cd /app/server && npm install --registry=https://registry.npmmirror.com && node app.js"

  server2:
    image: node
    container_name: server2
    volumes:
      - ./server:/app/server
      - ./logs:/app/logs
    networks:
      - webnetwork
    command: sh -c "cd /app/server && npm install --registry=https://registry.npmmirror.com && node app.js"

  mysql:
    image: mysql:5.7
    ports:
      - "3307:3306"
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: login
    volumes:
      - ./mysql/conf/my.cnf:/etc/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d/
    networks:
      - webnetwork
    command: 
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-authentication-plugin=mysql_native_password

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis/conf/redis.conf:/etc/redis/redis.conf
    networks:
      - webnetwork
    command: ["redis-server","/etc/redis/redis.conf"]

networks:
  webnetwork:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
